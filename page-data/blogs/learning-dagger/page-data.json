{
    "componentChunkName": "component---src-templates-md-template-js",
    "path": "/blogs/learning-dagger",
    "result": {"pageContext":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#inject-annotation\"><code class=\"language-text\">@Inject</code> annotation</a></p>\n<ul>\n<li><a href=\"#1-on-constructor\">1. On constructor</a></li>\n<li><a href=\"#2-on-field\">2. On field</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#provides-annotation\"><code class=\"language-text\">@Provides</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#binds-annotation\"><code class=\"language-text\">@Binds</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#module-annotation\"><code class=\"language-text\">@Module</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#component-annotation\"><code class=\"language-text\">@Component</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#singleton-annotation\"><code class=\"language-text\">@Singleton</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#reusable-annotation\"><code class=\"language-text\">@Reusable</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#lazy-wrapper\">Lazy wrapper</a></p>\n</li>\n<li>\n<p><a href=\"#provider-wrapper\">Provider wrapper</a></p>\n</li>\n<li>\n<p><a href=\"#qualifier-annotation\"><code class=\"language-text\">@Qualifier</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#bindsoptionalof-annotation\"><code class=\"language-text\">@BindsOptionalOf</code> annotation</a></p>\n</li>\n<li>\n<p><a href=\"#bindsinstance-annotation\"><code class=\"language-text\">@BindsInstance</code> annotation</a></p>\n</li>\n</ul>\n</div>\n<h2 id=\"inject-annotation\" style=\"position:relative;\"><a href=\"#inject-annotation\" aria-label=\"inject annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Inject</code> annotation</h2>\n<h3 id=\"1-on-constructor\" style=\"position:relative;\"><a href=\"#1-on-constructor\" aria-label=\"1 on constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. On constructor</h3>\n<p>Automatically obtains an instance of parameters and invokes the constructor.</p>\n<h3 id=\"2-on-field\" style=\"position:relative;\"><a href=\"#2-on-field\" aria-label=\"2 on field permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. On field</h3>\n<p>“If your class has <code class=\"language-text\">@Inject</code>-annotated fields but no <code class=\"language-text\">@Inject</code>-annotated constructor, Dagger will inject those fields if requested, but will not create new instances. Add a no-argument constructor with the <code class=\"language-text\">@Inject</code> annotation to indicate that Dagger may create instances as well.” - <a href=\"https://dagger.dev/dev-guide/#:~:text=If%20your%20class%20has%20%40Inject%2Dannotated%20fields%20but%20no%20%40Inject%2Dannotated%20constructor%2C%20Dagger%20will%20inject%20those%20fields%20if%20requested%2C%20but%20will%20not%20create%20new%20instances.%20Add%20a%20no%2Dargument%20constructor%20with%20the%20%40Inject%20annotation%20to%20indicate%20that%20Dagger%20may%20create%20instances%20as%20well.\">Link</a></p>\n<h2 id=\"provides-annotation\" style=\"position:relative;\"><a href=\"#provides-annotation\" aria-label=\"provides annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Provides</code> annotation</h2>\n<p>Inject annotation will call the injected constructor to initialize the object. <code class=\"language-text\">@Provides</code> annotation enables customizable method to “provide” injected object.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Provides</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">provideHeater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ElectricHeater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Whenever object Heater is requested, this provideHeader() will be called.</p>\n<p>To create an alias of a type:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Provides</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">provideHeater</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElectricHeater</span> heater<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> heater<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"binds-annotation\" style=\"position:relative;\"><a href=\"#binds-annotation\" aria-label=\"binds annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Binds</code> annotation</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Binds</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">bindHeater</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElectricHeater</span> impl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Can also create an alias of one type.</p>\n<h2 id=\"module-annotation\" style=\"position:relative;\"><a href=\"#module-annotation\" aria-label=\"module annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Module</code> annotation</h2>\n<p>All <code class=\"language-text\">@Binds</code> and <code class=\"language-text\">@Provides</code> are required to be put in a <code class=\"language-text\">@Module</code> annotated interface.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Module</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">HeaterModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Binds</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">bindHeater</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElectricHeater</span> impl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"component-annotation\" style=\"position:relative;\"><a href=\"#component-annotation\" aria-label=\"component annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Component</code> annotation</h2>\n<p>This annotation is used at Application level. By annotating an interface with <code class=\"language-text\">@Component</code> with defined modules, Dagger framework will create a concrete class named as “DaggerXXX” with builder().</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span><span class=\"token punctuation\">(</span>modules <span class=\"token operator\">=</span> <span class=\"token class-name\">DripCoffeeModule</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">CoffeeShop</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">CoffeeMaker</span> <span class=\"token function\">maker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">CoffeeShop</span> coffeeShop <span class=\"token operator\">=</span> <span class=\"token class-name\">DaggerCoffeeShop</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">dripCoffeeModule</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DripCoffeeModule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"singleton-annotation\" style=\"position:relative;\"><a href=\"#singleton-annotation\" aria-label=\"singleton annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Singleton</code> annotation</h2>\n<p>Can be used to annotate injectable classes or providers.</p>\n<h2 id=\"reusable-annotation\" style=\"position:relative;\"><a href=\"#reusable-annotation\" aria-label=\"reusable annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Reusable</code> annotation</h2>\n<p>“That means that if you install a module with a @Reusable binding in a component, but only a subcomponent actually uses the binding, then only that subcomponent will cache the binding's object. If two subcomponents that do not share an ancestor each use the binding, each of them will cache its own object. If a component's ancestor has already cached the object, the subcomponent will reuse it.” – <a href=\"https://dagger.dev/dev-guide/#:~:text=That%20means%20that,will%20reuse%20it.\">Link</a></p>\n<h2 id=\"lazy-wrapper\" style=\"position:relative;\"><a href=\"#lazy-wrapper\" aria-label=\"lazy wrapper permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lazy wrapper</h2>\n<p><code class=\"language-text\">@Inject</code> or <code class=\"language-text\">@Provides</code> annotated type can be wrapped in Lazy defers instantiation until the first call to <code class=\"language-text\">get()</code> method.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GrindingCoffeeMaker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Inject</span> <span class=\"token class-name\">Lazy</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Grinder</span><span class=\"token punctuation\">></span></span> lazyGrinder<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">brew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">needsGrinding</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Grinder created once on first call to .get() and cached.</span>\n      lazyGrinder<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">grind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"provider-wrapper\" style=\"position:relative;\"><a href=\"#provider-wrapper\" aria-label=\"provider wrapper permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Provider wrapper</h2>\n<p>A Provider<T> invokes the binding logic for T each time .get() is called. If that binding logic is an @Inject constructor, a new instance will be created, but a @Provides method has no such guarantee. – <a href=\"https://dagger.dev/dev-guide/#:~:text=A%20Provider%3CT%3E%20invokes%20the%20binding%20logic%20for%20T%20each%20time%20.get()%20is%20called.%20If%20that%20binding%20logic%20is%20an%20%40Inject%20constructor%2C%20a%20new%20instance%20will%20be%20created%2C%20but%20a%20%40Provides%20method%20has%20no%20such%20guarantee.\">Link</a></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BigCoffeeMaker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Inject</span> <span class=\"token class-name\">Provider</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Filter</span><span class=\"token punctuation\">></span></span> filterProvider<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">brew</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> numberOfPots<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> numberOfPots<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      maker<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span>filterProvider<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//new filter every time.</span>\n      maker<span class=\"token punctuation\">.</span><span class=\"token function\">addCoffee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      maker<span class=\"token punctuation\">.</span><span class=\"token function\">percolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"qualifier-annotation\" style=\"position:relative;\"><a href=\"#qualifier-annotation\" aria-label=\"qualifier annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@Qualifier</code> annotation</h2>\n<p>Can be used when object initialization cannot be determined only by its type. In Spring, <code class=\"language-text\">@Name</code> is used for “name” based wiring. In Dagger, you can annotate an annotation interface with <code class=\"language-text\">@Qualifer</code> to define your own wiring annotation.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Qualifier</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">Named</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpensiveCoffeeMaker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Inject</span> <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Heater</span> waterHeater<span class=\"token punctuation\">;</span>\n  <span class=\"token annotation punctuation\">@Inject</span> <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hot plate\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Heater</span> hotPlateHeater<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Provides</span> <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hot plate\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">provideHotPlateHeater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ElectricHeater</span><span class=\"token punctuation\">(</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Provides</span> <span class=\"token annotation punctuation\">@Named</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Heater</span> <span class=\"token function\">provideWaterHeater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ElectricHeater</span><span class=\"token punctuation\">(</span><span class=\"token number\">93</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"bindsoptionalof-annotation\" style=\"position:relative;\"><a href=\"#bindsoptionalof-annotation\" aria-label=\"bindsoptionalof annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@BindsOptionalOf</code> annotation</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@BindsOptionalOf</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">CoffeeCozy</span> <span class=\"token function\">optionalCozy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That means that @Inject constructors and members and @Provides methods can depend on an Optional<CoffeeCozy> object. If there is a binding for CoffeeCozy in the component, the Optional will be present; if there is no binding for CoffeeCozy, the Optional will be absent. – <a href=\"https://dagger.dev/dev-guide/#:~:text=That%20means%20that%20%40Inject%20constructors%20and%20members%20and%20%40Provides%20methods%20can%20depend%20on%20an%20Optional%3CCoffeeCozy%3E%20object.%20If%20there%20is%20a%20binding%20for%20CoffeeCozy%20in%20the%20component%2C%20the%20Optional%20will%20be%20present%3B%20if%20there%20is%20no%20binding%20for%20CoffeeCozy%2C%20the%20Optional%20will%20be%20absent.\">Link</a></p>\n<h2 id=\"bindsinstance-annotation\" style=\"position:relative;\"><a href=\"#bindsinstance-annotation\" aria-label=\"bindsinstance annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">@BindsInstance</code> annotation</h2>\n<p>Marks a method on a component builder or a parameter on a component factory as binding an instance to some key within the component.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span><span class=\"token punctuation\">(</span>modules <span class=\"token operator\">=</span> <span class=\"token class-name\">AppModule</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AppComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">App</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Component.Builder</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Builder</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@BindsInstance</span> <span class=\"token class-name\">Builder</span> <span class=\"token function\">userName</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@UserName</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">AppComponent</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">App</span> app <span class=\"token operator\">=</span> <span class=\"token class-name\">DaggerAppComponent</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">userName</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","date":"July 30, 2022","tags":["blog","mymanual","dagger","di"],"title":"MyManual: Dagger","description":"Learning notes about Dagger."}},
    "staticQueryHashes": []}