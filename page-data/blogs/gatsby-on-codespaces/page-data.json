{
    "componentChunkName": "component---src-templates-md-template-js",
    "path": "/blogs/gatsby-on-codespaces",
    "result": {"pageContext":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#multiple-repositories-permission-setup\">Multiple Repositories Permission Setup</a></li>\n<li><a href=\"#error---failed-to-launch-the-browser-process\">ERROR - Failed to launch the browser process!</a></li>\n<li><a href=\"#vim-plugin-doesnt-work\">VIM Plugin Doesn't Work</a></li>\n</ul>\n</div>\n<h2 id=\"multiple-repositories-permission-setup\" style=\"position:relative;\"><a href=\"#multiple-repositories-permission-setup\" aria-label=\"multiple repositories permission setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiple Repositories Permission Setup</h2>\n<p>My blog is structured with multiple repositories hosted on Github for \"<a href=\"https://www.zzzgin.com/private-blog/password-protected-blog-in-gatsby\">password-protected blogs</a>\". They are managed by the native feature from Git called <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">Submodule</a>. The structure looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;public Github Repo> gatsby-project root\n  ┗ pages\n    ┣ &lt;Private Github Repo> Folder for private blogs as a submodule\n    ┣ Folder for blogs\n    ┗ ...</code></pre></div>\n<p>This structure helps when you want to have some private content within a public repo. But this does not work in codespaces by default because for security reasons, Codespaces only allow read/write permission on the selected package when you start the VM.</p>\n<p>The permission is managed in <code class=\"language-text\">.devcontainer</code>. It's a folder in the root directory to config Codespaces VM creation.</p>\n<p>My <code class=\"language-text\">.devcontainer/devcontainer.json</code> looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Node.js\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"dockerfile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dockerfile\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"VARIANT\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"16-bullseye\"</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n\t<span class=\"token property\">\"customizations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"vscode\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">\"extensions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"your-own-extension-ids\"</span>\n\t\t\t<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"codespaces\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">\"repositories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">// This is how to config permission </span>\n\t\t\t\t<span class=\"token comment\">// to access other repo</span>\n\t\t\t\t<span class=\"token property\">\"ZzzGin/private-blogs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> \n\t\t\t\t\t<span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"write-all\"</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n\t<span class=\"token property\">\"forwardPorts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">8000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"remoteUser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>NOTE: you need to commit the change and then create a new Codespace to apply this change. At least for me, it works ONLY after doing this.</p>\n</blockquote>\n<h2 id=\"error---failed-to-launch-the-browser-process\" style=\"position:relative;\"><a href=\"#error---failed-to-launch-the-browser-process\" aria-label=\"error   failed to launch the browser process permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ERROR - Failed to launch the browser process!</h2>\n<p>By deafult, we are using some docker image provided by Github and it works with Gatsby build. But After applying the new <code class=\"language-text\">.devcontainer</code> file, the images \"16-bullseye\" does not include Chomium for some process in Gatsby build.</p>\n<p>To resolve this, we need to run following commands to install Chrome as prerequisites:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> --assume-yes <span class=\"token function\">install</span> ./google-chrome-stable_current_amd64.deb</code></pre></div>\n<h2 id=\"vim-plugin-doesnt-work\" style=\"position:relative;\"><a href=\"#vim-plugin-doesnt-work\" aria-label=\"vim plugin doesnt work permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VIM Plugin Doesn't Work</h2>\n<p>Don't put Vim plugin in the extention list inside of <code class=\"language-text\">devcontainer.json</code>. Not sure why but after removing it out and install it manually, Vim will work properly.</p>","date":"June 27, 2022","tags":["blog","gatsby","codespace"],"title":"My Gatsby Workspace on Codespaces","description":"ON the homepage of Codespaces, Github markets it as a seamless switch of desktop VS Code. My blog is hosted on Github Pages with Gatsby as its framework. I use VS Code to write blogs locally. So naturally, after getting the preview opportunity to Codespaces, I try to migrate to it. Here is a note for some problems I met and how I fix them for the migration."}},
    "staticQueryHashes": []}