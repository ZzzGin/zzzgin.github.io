{"version":3,"file":"component---src-templates-md-template-js-a703215a58ca9b12076b.js","mappings":"+IAeA,IAZY,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACX,OACI,qBAAGC,KAAM,SAASD,EAAQE,OAAOC,cAAcC,WAAW,IAAK,MAC3D,uBAAKC,UAAU,OACTL,EAAQE,OAAOC,kB,8GCmBjC,EAtBoB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAEhC,OACI,uBAAKF,UAAU,yBAEPC,GACI,uBAAKD,UAAU,eACTC,QAIAE,IAATD,GAAsC,IAAhBA,EAAKE,QACxB,uBAAKJ,UAAU,iBAEPE,EAAKG,KAAI,SAAAC,GAAG,OAAI,gBAACC,EAAA,EAAD,CAAKZ,QAASW,UCJ3C,SAASE,EAASC,GAG/B,IACwBC,EADPD,EAATE,KACAC,eAGR,OACE,gCACA,gBAACC,EAAA,EAAD,MACA,uBAAKb,UAAU,qCACb,gBAACc,EAAA,EAAD,CAAQC,MAAK,SAAYL,EAAKM,YAAYD,QAC1C,2BAASf,UAAU,aAEjB,uBAAKA,UAAU,SAASU,EAAKM,YAAYD,OAEzC,uBAAKf,UAAU,QAAQU,EAAKM,YAAYC,MAExC,gBAAC,EAAD,CAAahB,YAAaS,EAAKM,YAAYf,YAAaC,KAAMQ,EAAKM,YAAYd,MAAQ,KAEvF,uBACEF,UAAU,oBACVkB,wBAAyB,CAAEC,OAAQT,EAAKU,WA1BlDC,EAAQ,KACRA,EAAQ,O","sources":["webpack://zzzgin.github.io/./src/components/blog-components/Tag.js","webpack://zzzgin.github.io/./src/components/blog-components/Description.js","webpack://zzzgin.github.io/./src/templates/mdTemplate.js"],"sourcesContent":["import React from \"react\";\nimport \"@components/css/tag.css\";\n\nconst Tag = ({ content }) => {\n    return (\n        <a href={\"/tags/\"+content.trim().toLowerCase().replaceAll(' ', '-')}>\n            <div className=\"tag\">\n                { content.trim().toLowerCase() }\n            </div>\n        </a>\n        \n    )\n}\n\n\nexport default Tag;","import React from 'react';\nimport '@components/css/description.css';\nimport Tag from './Tag';\n\nconst Description = ( {description, tags} ) => {\n\n    return (\n        <div className='description-container'>\n            {\n                description &&\n                    <div className='description'>\n                        { description }\n                    </div>\n            }\n            {\n                (tags !== undefined && tags.length !== 0) && \n                    <div className='tag-container'>\n                        {\n                            tags.map(tag => <Tag content={tag} />)\n                        }\n                    </div>\n            }\n        </div>\n    );\n};\n\nexport default Description;","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport Navbar from '../components/blog-components/Navbar'\nimport '@components/css/blog-post.css'\nimport '@components/css/github-markdown.css'\nimport '@components/css/priority-markers.css'\nimport \"@fontsource/noto-serif\"\nimport \"@fontsource/noto-sans\"\nimport Description from \"../components/blog-components/Description\"\nrequire(`katex/dist/katex.min.css`)\nrequire(\"prismjs/themes/prism-okaidia.css\")\n\n\nexport default function Template(props) {\n\n  // const { data, pageContext } = props;\n  const { data } = props;\n  const { markdownRemark: post } = data;\n  // const { next, prev } = pageContext;\n\n  return (\n    <>\n    <Navbar />\n    <div className=\"blog-post-container markdown-body\">\n      <Helmet title={ `zzz - ${post.frontmatter.title}`} />\n      <article className=\"blog-post\">\n\n        <div className=\"title\">{post.frontmatter.title}</div>\n\n        <div className=\"date\">{post.frontmatter.date}</div>\n\n        <Description description={post.frontmatter.description} tags={post.frontmatter.tags || []}/>\n        \n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n\n        {/* <Tags list={post.frontmatter.tags || []} /> */}\n\n        {/* <div className=\"navigation\">\n            {prev &&\n              <Link className=\"link prev\" to={prev.frontmatter.path}>\n                <BiChevronLeft /> {prev.frontmatter.title}\n              </Link>}\n            {next &&\n              <Link className=\"link next\" to={next.frontmatter.path}>\n                {next.frontmatter.title} <BiChevronRight />\n              </Link>}\n          </div> */}\n\n      </article>\n    </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        tags\n        title\n        description\n      }\n    }\n  }\n`;"],"names":["content","href","trim","toLowerCase","replaceAll","className","description","tags","undefined","length","map","tag","Tag","Template","props","post","data","markdownRemark","Navbar","Helmet","title","frontmatter","date","dangerouslySetInnerHTML","__html","html","require"],"sourceRoot":""}