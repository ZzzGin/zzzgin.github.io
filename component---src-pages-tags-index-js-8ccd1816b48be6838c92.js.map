{"version":3,"file":"component---src-pages-tags-index-js-8ccd1816b48be6838c92.js","mappings":"gNAcA,EAXkB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvB,OACI,qBAAGA,KAAOA,GACN,uBAAKC,UAAU,OACTF,KCmElB,EAlEoB,SAACG,GAEjB,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBF,MACvCG,EAAO,GACXH,EAAMI,SAAQ,SAAAC,GACVA,EAAKC,KAAKC,YAAYJ,KAAKC,SAAQ,SAAAI,IAC/BA,EAAMA,EAAIC,OAAOC,iBACNP,EACPA,EAAKK,KAGLL,EAAKK,GAAO,QAIxB,IAAIG,EAAc,GAClB,IAAK,IAAIH,KAAOL,EACRK,EAAI,KAAMG,EACVA,EAAYH,EAAI,IAAII,KAAKJ,GAGzBG,EAAYH,EAAI,IAAM,CAACA,GAG/B,IAAK,IAAIK,KAAeF,EACpBA,EAAYE,GAAaC,OAE7B,IAAIC,EAAa,GAUjB,OATAC,OAAOC,KAAKN,GAAaG,OAAOV,SAAQ,SAAAc,GACpCH,EAAWH,KAAK,CACZO,GAAID,EACJf,KAAMQ,EAAYO,QAI1BE,QAAQC,IAAIN,GAGR,gCACI,gBAACO,EAAA,EAAD,CAAQC,MAAM,aACd,gBAACC,EAAA,EAAD,MACA,uBAAK1B,UAAU,qBACX,uBAAKA,UAAU,sBAAf,SAIIiB,EAAWU,KAAI,SAACC,EAAIC,GAAL,OACX,uBAAK7B,UAAU,yBACX,uBAAKA,UAAU,iBACV4B,EAAGP,IAER,uBAAKrB,UAAU,gBAEXiB,EAAWY,GAAGxB,KAAKsB,KAAI,SAAAG,GAAC,OACpB,gBAAC,EAAD,CAAWhC,KAAMgC,EAAC,KAAQzB,EAAKyB,GAAb,IAAoB/B,KAAM,SAAS+B,EAAEC,WAAW,IAAK","sources":["webpack://zzzgin.github.io/./src/components/blog-components/StaticTag.js","webpack://zzzgin.github.io/./src/pages/tags/index.js"],"sourcesContent":["import React from \"react\";\nimport \"@components/css/tag.css\";\n\nconst StaticTag = ({ text, href }) => {\n    return (\n        <a href={ href }>\n            <div className=\"tag\">\n                { text }\n            </div>\n        </a>\n        \n    )\n}\n\nexport default StaticTag;","import * as React from \"react\"\nimport Navbar from \"@components/blog-components/Navbar\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport \"@components/css/tags-manager.css\"\nimport StaticTag from \"../../components/blog-components/StaticTag\"\n\n\nconst TagsManager = (props) => {\n\n    const edges = props.data.allMarkdownRemark.edges;\n    let tags = {};\n    edges.forEach(edge => {\n        edge.node.frontmatter.tags.forEach(tag => {\n            tag = tag.trim().toLowerCase();\n            if (tag in tags) {\n                tags[tag] ++;\n            }\n            else {\n                tags[tag] = 1;\n            }\n        });\n    });\n    let groupedTags = {};\n    for (let tag in tags) {\n        if (tag[0] in groupedTags) {\n            groupedTags[tag[0]].push(tag);\n        }\n        else {\n            groupedTags[tag[0]] = [tag];\n        }\n    }\n    for (let leadingChar in groupedTags) {\n        groupedTags[leadingChar].sort();\n    }\n    let sortedTags = [];\n    Object.keys(groupedTags).sort().forEach(initiate => {\n        sortedTags.push({\n            ch: initiate,\n            tags: groupedTags[initiate]\n        });\n    })\n        \n    console.log(sortedTags);\n\n    return (\n        <>\n            <Helmet title=\"zzz Tags\" />\n            <Navbar />\n            <div className=\"tags-manager-body\">\n                <div className=\"tags-manager-title\">\n                    Tags:\n                </div>\n                {\n                    sortedTags.map((el, i) => \n                        <div className=\"tags-initiate-wrapper\">\n                            <div className=\"tags-initiate\">\n                                {el.ch}\n                            </div>\n                            <div className=\"tags-wrapper\">\n                            {\n                                sortedTags[i].tags.map(t => \n                                    <StaticTag text={t + ` (${tags[t]})`} href={\"/tags/\"+t.replaceAll(\" \", \"-\")} />\n                                )\n                            }\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        </>\n    )\n}\n\nexport default TagsManager;\n\nexport const query = graphql`\nquery MyQuery {\n    allMarkdownRemark {\n        edges {\n            node {\n                frontmatter {\n                    tags\n                }\n            }\n        }\n    }\n}\n`"],"names":["text","href","className","props","edges","data","allMarkdownRemark","tags","forEach","edge","node","frontmatter","tag","trim","toLowerCase","groupedTags","push","leadingChar","sort","sortedTags","Object","keys","initiate","ch","console","log","Helmet","title","Navbar","map","el","i","t","replaceAll"],"sourceRoot":""}